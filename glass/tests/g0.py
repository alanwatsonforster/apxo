from glass.tests.infrastructure import *

startfile(__file__, "slides")

# Slides

# Check the position after a slide.

starttestsetup(sheets=[["A1"]])
A1 = setupaircraft("A1", "AF", "F-80C", "A1-1708", "E", 10, 3.0, "CL")
A2 = setupaircraft("A2", "AF", "F-80C", "A1-2308", "E", 10, 3.0, "CL")
endtestsetup()
startgameturn()
A1.move("LVL", "M", "SLL/H,H,H/L")
A1._assert("A1-2008       E    10", 3.0)
A2.move("LVL", "M", "SLR/H,H,H/R")
A2._assert("A1-2609       E    10", 3.0)
endgameturn()

starttestsetup(sheets=[["A1"]])
A1 = setupaircraft("A1", "AF", "F-80C", "A1-1708", "ENE", 10, 3.0, "CL")
A2 = setupaircraft("A2", "AF", "F-80C", "A1-2308", "ENE", 10, 3.0, "CL")
endtestsetup()
startgameturn()
A1.move("LVL", "M", "SLL/H,H,H/L")
A1._assert("A1-1906       ENE  10", 3.0)
A2.move("LVL", "M", "SLR/H,H,H/R")
A2._assert("A1-2608       ENE  10", 3.0)
endgameturn()

starttestsetup(sheets=[["A1"]])
A1 = setupaircraft("A1", "AF", "F-80C", "A1-1708", "NNE", 10, 3.0, "CL")
A2 = setupaircraft("A2", "AF", "F-80C", "A1-2308", "NNE", 10, 3.0, "CL")
endtestsetup()
startgameturn()
A1.move("LVL", "M", "SLL/H,H,H/L")
A1._assert("A1-1806       NNE  10", 3.0)
A2.move("LVL", "M", "SLR/H,H,H/R")
A2._assert("A1-2506       NNE  10", 3.0)
endgameturn()

starttestsetup(sheets=[["A1"]])
A1 = setupaircraft("A1", "AF", "F-80C", "A1-1708", "N", 10, 3.0, "CL")
A2 = setupaircraft("A2", "AF", "F-80C", "A1-2308", "N", 10, 3.0, "CL")
endtestsetup()
startgameturn()
A1.move("LVL", "M", "SLL/H,H,H/L")
A1._assert("A1-1606       N    10", 3.0)
A2.move("LVL", "M", "SLR/H,H,H/R")
A2._assert("A1-2406       N    10", 3.0)
endgameturn()

starttestsetup(sheets=[["A1"]])
A1 = setupaircraft("A1", "AF", "F-80C", "A1-1708", "NNW", 10, 3.0, "CL")
A2 = setupaircraft("A2", "AF", "F-80C", "A1-2308", "NNW", 10, 3.0, "CL")
endtestsetup()
startgameturn()
A1.move("LVL", "M", "SLL/H,H,H/L")
A1._assert("A1-1506       NNW  10", 3.0)
A2.move("LVL", "M", "SLR/H,H,H/R")
A2._assert("A1-2206       NNW  10", 3.0)
endgameturn()

starttestsetup(sheets=[["A1"]])
A1 = setupaircraft("A1", "AF", "F-80C", "A1-1708", "WNW", 10, 3.0, "CL")
A2 = setupaircraft("A2", "AF", "F-80C", "A1-2308", "WNW", 10, 3.0, "CL")
endtestsetup()
startgameturn()
A1.move("LVL", "M", "SLL/H,H,H/L")
A1._assert("A1-1408       WNW  10", 3.0)
A2.move("LVL", "M", "SLR/H,H,H/R")
A2._assert("A1-2106       WNW  10", 3.0)
endgameturn()

starttestsetup(sheets=[["A1"]])
A1 = setupaircraft("A1", "AF", "F-80C", "A1-1708", "W", 10, 3.0, "CL")
A2 = setupaircraft("A2", "AF", "F-80C", "A1-2308", "W", 10, 3.0, "CL")
endtestsetup()
startgameturn()
A1.move("LVL", "M", "SLL/H,H,H/L")
A1._assert("A1-1409       W    10", 3.0)
A2.move("LVL", "M", "SLR/H,H,H/R")
A2._assert("A1-2008       W    10", 3.0)
endgameturn()

starttestsetup(sheets=[["A1"]])
A1 = setupaircraft("A1", "AF", "F-80C", "A1-1708", "WSW", 10, 3.0, "CL")
A2 = setupaircraft("A2", "AF", "F-80C", "A1-2308", "WSW", 10, 3.0, "CL")
endtestsetup()
startgameturn()
A1.move("LVL", "M", "SLL/H,H,H/L")
A1._assert("A1-1510       WSW  10", 3.0)
A2.move("LVL", "M", "SLR/H,H,H/R")
A2._assert("A1-2009       WSW  10", 3.0)
endgameturn()

starttestsetup(sheets=[["A1"]])
A1 = setupaircraft("A1", "AF", "F-80C", "A1-1708", "SSW", 10, 3.0, "CL")
A2 = setupaircraft("A2", "AF", "F-80C", "A1-2308", "SSW", 10, 3.0, "CL")
endtestsetup()
startgameturn()
A1.move("LVL", "M", "SLL/H,H,H/L")
A1._assert("A1-1611       SSW  10", 3.0)
A2.move("LVL", "M", "SLR/H,H,H/R")
A2._assert("A1-2110       SSW  10", 3.0)
endgameturn()

starttestsetup(sheets=[["A1"]])
A1 = setupaircraft("A1", "AF", "F-80C", "A1-1708", "S", 10, 3.0, "CL")
A2 = setupaircraft("A2", "AF", "F-80C", "A1-2308", "S", 10, 3.0, "CL")
endtestsetup()
startgameturn()
A1.move("LVL", "M", "SLL/H,H,H/L")
A1._assert("A1-1811       S    10", 3.0)
A2.move("LVL", "M", "SLR/H,H,H/R")
A2._assert("A1-2211       S    10", 3.0)
endgameturn()

starttestsetup(sheets=[["A1"]])
A1 = setupaircraft("A1", "AF", "F-80C", "A1-1708", "SSE", 10, 3.0, "CL")
A2 = setupaircraft("A2", "AF", "F-80C", "A1-2308", "SSE", 10, 3.0, "CL")
endtestsetup()
startgameturn()
A1.move("LVL", "M", "SLL/H,H,H/L")
A1._assert("A1-1910       SSE  10", 3.0)
A2.move("LVL", "M", "SLR/H,H,H/R")
A2._assert("A1-2411       SSE  10", 3.0)
endgameturn()

starttestsetup(sheets=[["A1"]])
A1 = setupaircraft("A1", "AF", "F-80C", "A1-1708", "ESE", 10, 3.0, "CL")
A2 = setupaircraft("A2", "AF", "F-80C", "A1-2308", "ESE", 10, 3.0, "CL")
endtestsetup()
startgameturn()
A1.move("LVL", "M", "SLL/H,H,H/L")
A1._assert("A1-2009       ESE  10", 3.0)
A2.move("LVL", "M", "SLR/H,H,H/R")
A2._assert("A1-2510       ESE  10", 3.0)
endgameturn()

# Check we can carry preparatory HFPs from one turn to the next.

starttestsetup(verbose=False)
A1 = setupaircraft("A1", "AF", "F-104A", "A1-1715", "N", 10, 7.0, "CL")
endtestsetup()
startgameturn()
A1.move("LVL", 0.5, "H,H,H,H,H,SLL/H,H")
A1._assert("A1-1708       N    10", 7.0)
endgameturn()

startgameturn()
A1.move("LVL", 0.5, "H/L,H,H,H,H,H,H")
A1._assert("A1-1602       N    10", 7.0)
endgameturn()

# Check VFPs and unloaded HFPs are not counted as preparatory HFPs.

starttestsetup(verbose=False)
A1 = setupaircraft("A1", "AF", "F-104A", "A1-1715", "N", 10, 7.0, "CL")
endtestsetup()
startgameturn()
A1.move("UD", "AB", "SLL/H,HU,H/L,H,H,H,H")
asserterror("attempt to slide without sufficient preparatory HFPs.")
startgameturn()
A1.move("UD", "AB", "SLL/H,H,HU/L,H,H,H,H")
asserterror("attempt to slide without sufficient preparatory HFPs.")
startgameturn()
A1.move("UD", "AB", "SLL/H,H,H/L,HU,HU,HU,HU")
A1._assert("A1-1609       N     9", 8.0)
startgameturn()
A1.move("SD", "AB", "SLL/H,D,H/L,H,H,H,H")
asserterror("attempt to slide without sufficient preparatory HFPs.")
startgameturn()
A1.move("SD", "AB", "SLL/H,H,D/L,H,H,H,H")
asserterror("attempt to slide without sufficient preparatory HFPs.")
startgameturn()
A1.move("SD", "AB", "SLL/H,H,H/L,D,D,D,D")
A1._assert("A1-1613       N     6", 9.0)
startgameturn()
A1.move("ZC", "AB", "SLL/H,C,H/L,H,H,H,H")
asserterror("attempt to slide without sufficient preparatory HFPs.")
startgameturn()
A1.move("ZC", "AB", "SLL/H,H,C/L,H,H,H,H")
asserterror("attempt to slide without sufficient preparatory HFPs.")
startgameturn()
A1.move("ZC", "AB", "SLL/H,H,H/L,C,C,C,C")
A1._assert("A1-1613       N    14", 7.0)
endgameturn()

startgameturn()
A1.move("ZC", "AB", "SLL/C,H,H/L,H,H,H,H")
asserterror("attempt to slide without sufficient preparatory HFPs.")
startgameturn()
A1.move("LVL", "M", "H,H,H,H,H,H,H")
A1._assert("A1-1606       N    14", 7.0)
endgameturn()

# Check the required preparatory HFPs, both at subsonic and supersonic speeds.

starttestsetup(verbose=False)
A1 = setupaircraft("A1", "AF", "F-104A", "A1-1715", "N", 7, 7.0, "CL")
A2 = setupaircraft("A2", "AF", "F-104A", "A1-1915", "N", 7, 7.5, "CL")
A3 = setupaircraft("A3", "AF", "F-104A", "A1-2115", "N", 20, 6.5, "CL")
A4 = setupaircraft("A4", "AF", "F-104A", "A1-2315", "N", 20, 7.0, "CL")
endtestsetup()
startgameturn()
A1.move("LVL", "AB", "SLL/H,H/L,H,H,H,H,H")
asserterror("attempt to slide without sufficient preparatory HFPs.")
startgameturn()
A2.move("LVL", "AB", "SLL/H,H,H/L,H,H,H,H")
asserterror("attempt to slide without sufficient preparatory HFPs.")
startgameturn()
A3.move("LVL", "AB", "SLL/H,H/L,H,H,H,H")
asserterror("attempt to slide without sufficient preparatory HFPs.")
startgameturn()
A4.move("LVL", "AB", "SLL/H,H,H/L,H,H,H,H")
asserterror("attempt to slide without sufficient preparatory HFPs.")
startgameturn()
A1.move("LVL", "AB", "SLL/H,H,H/L,H,H,H,H")
A1._assert("A1-1609       N     7", 8.0)
A2.move("LVL", "AB", "SLL/H,H,H,H/L,H,H,H")
A2._assert("A1-1809       N     7", 8.0)
A3.move("LVL", "AB", "SLL/H,H,H/L,H,H,H")
A3._assert("A1-2010       N    20", 7.5)
A4.move("LVL", "AB", "SLL/H,H,H,H/L,H,H,H")
A4._assert("A1-2209       N    20", 7.5)
endgameturn()

# Check additional preparatory HFPs required at altitude.

starttestsetup(verbose=False)
A1 = setupaircraft("A1", "AF", "F-104A", "A1-1515", "N", 20, 12.0, "CL")
A2 = setupaircraft("A2", "AF", "F-104A", "A1-1715", "N", 30, 12.0, "CL")
A3 = setupaircraft("A3", "AF", "F-104A", "A1-1915", "N", 40, 12.0, "CL")
A4 = setupaircraft("A4", "AF", "F-104A", "A1-2115", "N", 50, 12.0, "CL")
A5 = setupaircraft("A5", "AF", "F-104A", "A1-2315", "N", 61, 12.0, "CL")

endtestsetup()
startgameturn()
A1.move("LVL", "AB", "SLL/H,H,H/L,H,H,H,H,H,H,H,H,H")
asserterror("attempt to slide without sufficient preparatory HFPs.")
startgameturn()
A2.move("LVL", "AB", "SLL/H,H,H,H/L,H,H,H,H,H,H,H,H")
asserterror("attempt to slide without sufficient preparatory HFPs.")
startgameturn()
A3.move("LVL", "AB", "SLL/H,H,H,H,H/L,H,H,H,H,H,H,H")
asserterror("attempt to slide without sufficient preparatory HFPs.")
startgameturn()
A4.move("LVL", "AB", "SLL/H,H,H,H,H,H/L,H,H,H,H,H,H")
asserterror("attempt to slide without sufficient preparatory HFPs.")
startgameturn()
A5.move("LVL", "AB", "SLL/H,H,H,H,H,H,H/L,H,H,H,H,H")
asserterror("attempt to slide without sufficient preparatory HFPs.")
startgameturn()
A1.move("LVL", "AB", "SLL/H,H,H,H/L,H,H,H,H,H,H,H,H")
A1._assert("A1-1404       N    20", 12.0)
A2.move("LVL", "AB", "SLL/H,H,H,H,H/L,H,H,H,H,H,H,H")
A2._assert("A1-1604       N    30", 12.5)
A3.move("LVL", "AB", "SLL/H,H,H,H,H,H/L,H,H,H,H,H,H")
A3._assert("A1-1804       N    40", 12.5)
A4.move("LVL", "AB", "SLL/H,H,H,H,H,H,H/L,H,H,H,H,H")
A4._assert("A1-2004       N    50", 12.0)
A5.move("LVL", "AB", "SLL/H,H,H,H,H,H,H,H/L,H,H,H,H")
A5._assert("A1-2204       N    61", 12.0)
endgameturn()

# Check the ability to have more than one slide at a speed of more than 9.0.

starttestsetup(verbose=False)
A1 = setupaircraft("A1", "AF", "F-104A", "A1-1715", "N", 20, 12.5, "CL")

endtestsetup()
startgameturn()
A1.move("LVL", "AB", "SLL/H,H,H,H/L,H,H,H,SLR/H,H,H,H/R,H")
asserterror("attempt to start a second slide without sufficient intermediate FPs.")
startgameturn()
A1.move("LVL", "AB", "SLL/H,H,H,H/L,H,H,H,H,SLR/H,H,H,H/R")
A1._assert("A1-1704       N    20", 12.0)
startgameturn()
A1.move("LVL", "AB", "SLL/H,H,H,H/L,H,H,H,H,SLR/H,H,H,H/R")
A1._assert("A1-1704       N    20", 12.0)
startgameturn()
A1.move("ZC", 2.5, "SLL/H,H,H,H/L,C,C,C,C,SLR/H,H,H,H/R")
A1._assert("A1-1708       N    24", 12.0)
startgameturn()
A1.move("SD", "AB", "SLL/H,H,H,H/L,D,D,D,D,SLR/H,H,H,H/R")
A1._assert("A1-1708       N    16", 10.5)
endgameturn()

# Check that we can't set bank on exit from a slide.

starttestsetup(verbose=False)
A1 = setupaircraft("A1", "AF", "F-104A", "A1-1715", "N", 10, 7.0, "CL")
endtestsetup()
startgameturn()
A1.move("LVL", 0.5, "SLL/H,H,H/L/BR,H,H,H,H")
asserterror("attempt to bank immediately after a maneuver that is not a roll.")
startgameturn()
A1.move("LVL", 0.5, "SLL/H,H,H/L,H/BR,H,H,H")
A1._assert("A1-1609       N    10", 7.0)
endgameturn()

endfile(__file__)
